import{_ as s,D as t,af as i,B as a}from"./chunks/framework.BsGVjEHh.js";const p="/posts/2022/06/img-1.png",o="/posts/2022/06/img-2.png",n="/posts/2022/06/img-3.png",d="/posts/2022/06/img-4.png",l="/posts/2022/06/img-5.png",c="/posts/2022/06/img-6.png",r="/posts/2022/06/img-7.png",y=JSON.parse('{"title":"如何在Vue3的Store中使用i18n","description":"使用的`element-plus`框架时，i18n 的前置初始化","frontmatter":{"layout":"doc","title":"如何在Vue3的Store中使用i18n","date":"2022-06-27T00:00:00.000Z","tags":["编程","工作","学习"],"head":[["meta",{"name":"description","content":"使用的`element-plus`框架时，i18n 的前置初始化"}],["meta",{"name":"keywords","content":"vue vue3 i18n js javascript"}]],"editLink":false,"lastUpdated":true},"headers":[],"relativePath":"posts/2022/06/如何在Vue3的Store中使用i18n.md","filePath":"posts/2022/06/如何在Vue3的Store中使用i18n.md","lastUpdated":null}'),h={name:"posts/2022/06/如何在Vue3的Store中使用i18n.md"};function u(k,e,m,g,_,E){return a(),t("div",null,e[0]||(e[0]=[i('<blockquote><p>文章摘要</p></blockquote><p>这篇文章讨论了在 Vue3 环境下使用 vue-i18n 和 element-plus 处理多语言提示时遇到的问题及解决方案。具体来说，文章描述了在使用 setup 函数的路由中，因 useI18n() 在加载时未准备好，导致无法直接使用 t、d 等翻译方法的问题。为了绕过这个问题，文章提供了解决方案，通过手动引入已配置的 i18n 方法，而不是依赖 useI18n()。</p><p>总结来说，Vue3 中的 setup 和 ts 环境在路由中使用多语言时会遇到时序性问题，解决方法是手动导入已配置的 i18n 实例，直接调用翻译方法，避免了在路由中使用 useI18n() 时的顺序问题。这种方法可以确保在路由和组件中都能正确地显示多语言提示信息。</p><h2 id="使用环境" tabindex="-1">使用环境 <a class="header-anchor" href="#使用环境" aria-label="Permalink to &quot;使用环境&quot;">​</a></h2><blockquote><p><code>Vue</code>的版本为：<code>3.2.36</code>，</p><p><code>vue-router</code>的版本为：<code>4.0.16</code></p><p><code>vue-i18n</code>的版本为：<code>9.2.0-beta.40</code></p></blockquote><p>几乎都最新版本了</p><p><img src="'+p+'" alt="在这里插入图片描述"></p><h2 id="问题复现" tabindex="-1">问题复现 <a class="header-anchor" href="#问题复现" aria-label="Permalink to &quot;问题复现&quot;">​</a></h2><p>使用的<code>element-plus</code>框架进行项目的搭建，在登陆的时候在全局路由中进行密码的校验，如果密码错误或正确使用<code>element-plus</code> 中的提示组件登录的提示，但是提示的内容要根据选择的语言进行分别的提示</p><p>这个似乎很正常的需求，但是因为使用的<code>vue3</code>中的<code>setup</code>，并且在路由中是使用的<code>ts</code>，所以不能使用this，并且像<code>vue</code>文件中使用的引入方式：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">locale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useI18n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>这种方式也是不行的，因为执行顺序的前后问题，在路由加载时<code>useI18n()</code>还没有引入执行，所以这种方式的引入会直接报错的</p><h2 id="问题解决" tabindex="-1">问题解决 <a class="header-anchor" href="#问题解决" aria-label="Permalink to &quot;问题解决&quot;">​</a></h2><p>因为在<code>.vue</code>文件中会使用对应的方法将对应的内容引入，但是当执行路由时这个内容并没有加载，但是这个代码一定是存在并且可以直接运行的，所以可以通过其他方式直接手动将对应需要的代码引入，而不使用提供的方法</p><p>当在创建对应的i18n时，会先将对应的内容进行创建和导出：</p><p><img src="'+o+'" alt="在这里插入图片描述"></p><p>在这个文件中创建了i18n，并且对特定的配置项进行了指定，但是导出的这个i18n中有什么？</p><p><img src="'+n+'" alt="在这里插入图片描述"></p><p>在配置的文件中已经存在了要使用的方法，也就是导出的：<code>t</code>,<code>d</code>,<code>n</code>等，要使用的方法也在这里面</p><p><img src="'+d+'" alt="在这里插入图片描述"></p><p>在这个<code>global</code>中存在了对应的全局的方法，不需要通过i18n指定的方法进行引入执行，可以直接使用，所以这个就是要手动引入的内容</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><p><img src="'+l+'" alt="在这里插入图片描述"></p><p>使用这种方法问题得到解决，不过在尝试过程中，这种两种方式使用的i18n也是有区别的</p><p>在引入的过程中，因为方式不同，所以引入的方法其实也不是同一个</p><p><img src="'+c+'" alt="在这里插入图片描述"></p><p>不过在对应的注释中也能略微看出二者的区别</p><p><img src="'+r+'" alt="在这里插入图片描述"></p><p>使用方法引入的‘t’应当也有特有的内容，这里只进行列举，不继续深入探讨。</p>',29)]))}const v=s(h,[["render",u]]);export{y as __pageData,v as default};
